package l.io.ex2;

public class Run {
	/*
	 	프로그램 상의 데이터를 외부 매체로 출력한다거나 또는 외부 매체로부터 입력을 받아오려고 한다.!
	 	이 때 반드시 외부 매체와 연결되는 통로를 만들어줘야 한다 => 스트림
	 	
	 	* 스트림 : 입출력 장치에서 데이터를 읽고 쓰기 위해 자바에서 제공하는 클래스.(이렇게 제공되는 것들을 내장패키지라고 함.)
	 	 		 모든 스트림은 단방향.
	 	 		 각각의 장치마다 연결할 수 있는 스트림 존재.
	 	 		 하나의 스트림으로 입출력을 동시에 수행할 수 없으므로 동시에 수행하려면 2개의 스트림 필요.
	 	
	 	* 스트림의 특징
		 	- 단방향 : 입력이면 입력 / 출력이면 출력만 가능
		 				=> 입력과 출력을 동시에 하고자 한다면 -> 입력스트림, 출력스트림을 따로 열어줘야한다.
		 	- 선입선출(FIFO) : 통로가 파이프같은 개념이기 때문에 먼저 보낸 값이 먼저 나온다.
		 	- 시간지연(delay)가 발생할 수 있다.
	 	
	 	
	 	* 스트림의 구분
		 	> 통로의 사이즈(1byte / 2byte)
			 	- 바이트스트림 : 1byte만 왔다갔다 할 수 있는 통로 -> 입력(InputStream), 출력(OutputStream)
			 				바이트 코드 기반 스트림(Byte Stream)이란, 데이터를 바이트 단위(8비트)로 읽고 쓰는 입출력 스트림.
			 				수동으로 인코딩 필요.
			 				java.io 패키지에서 제공.
			 				
			 	- 문자스트림 : 2byte가 왔다갔다 할 수 있는 통로 -> 입력(Reader), 출력(Writer)
			 				데이터를 문자(char) 단위(2바이트)로 처리하는 입출력 스트림.
			 				2바이트(16비트) 단위 처리 → 유니코드(UTF-8, UTF-16 등)를 사용하여 텍스트 데이터를 다룸.
			 				텍스트 데이터 처리에 최적화됨 → 읽고 쓸 때 인코딩/디코딩을 자동 처리.
		 				
	 	
		 	> 외부매체와 직접 연결유무
			 	- 기반스트림 : 외부매체와 직접적으로 연결되는 통로(필수)
			 	- 보조스트림 : 기반스트림을 보조하는 통로(속도를 빠르게 하거나, 유용한 기능을 제공하기 위한 보조역할)
			 				=> 단독으로 사용불가! 반드시 기반스트림과 함께여야만 사용할 수 있다.
	 */
	
	

	public static void main(String[] args) {
//		new ServeStream().fileSave();
//		new ServeStream().fileRead();
//		new ServeStream().objectSave();
		new ServeStream().objectRead();

	}

}
